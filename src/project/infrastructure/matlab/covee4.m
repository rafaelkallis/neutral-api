function S5=covee4(S)
% Input:
%   Matrix S: x-axis::reviewer, y-axis::author
%
% Case 8:
% S = [
% 0, 0.137, 0.147, 0.144, 0.147, 0.140, 0.141, 0.144;
% 0.143, 0, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143;
% 0.188, 0.144, 0, 0.142, 0.142, 0.142, 0.121, 0.121;
% 0.143, 0.143, 0.143, 0, 0.143, 0.143, 0.143, 0.143;
% 0.143, 0.145, 0.143, 0.143, 0, 0.143, 0.140, 0.143;
% 0.143, 0.143, 0.143, 0.142, 0.143, 0, 0.143, 0.143;
% 0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0, 0.142;
% 0.181, 0.140, 0.140, 0.124, 0.156, 0.145, 0.114, 0;
% ]
%
% Case 7:
% S = [
% 0, 0.209, 0.167, 0.183, 0.167, 0.107, 0.167;
% 0.199, 0, 0.161, 0.160, 0.160, 0.160, 0.160;
% 0.191, 0.343, 0, 0.147, 0.111, 0.089, 0.119;
% 0.240, 0.200, 0.121, 0, 0.201, 0.075, 0.163;
% 0.224, 0.224, 0.149, 0.180, 0, 0.074, 0.149;
% 0.166, 0.166, 0.166, 0.166, 0.166, 0, 0.166;
% 0.188, 0.192, 0.166, 0.177, 0.166, 0.111, 0;
% ]
%
% Case 6: NO CASE YET
% S = [
% 0, 0.333, 0.333, 0.333, 0.333, 0.333;
% 0.333, 0, 0.333, 0.333, 0.333, 0.333;
% 0.333, 0.333, 0, 0.333, 0.333, 0.333;
% 0.333, 0.333, 0.333, 0, 0.333, 0.333;
% 0.333, 0.333, 0.333, 0.333, 0, 0.333;
% 0.333, 0.333, 0.333, 0.333, 0.333, 0;
% ]
%
% Case 5A:
% S = [
% 0, 0.200, 0.320, 0.250, 0.230;
% 0.256, 0, 0.244, 0.244, 0.256;
% 0.250, 0.250, 0, 0.250, 0.250;
% 0.294, 0.221, 0.265, 0, 0.220;
% 0.350, 0.200, 0.250, 0.200, 0;
% ]
%
% Case 5B:
% S = [
% 0, 0.400, 0.400, 0.200, 0.000;
% 0.350, 0, 0.400, 0.200, 0.050;
% 0.439, 0.305, 0, 0.256, 0.000;
% 0.333, 0.333, 0.334, 0, 0.000;
% 0.250, 0.250, 0.250, 0.250, 0;
% ]
%
% Case 4A:
% S = [
% 0, 0.333, 0.333, 0.333;
% 0.333, 0, 0.333, 0.333;
% 0.325, 0.313, 0, 0.362;
% 0.341, 0.338, 0.321, 0;
% ]
%
% Case 4B:
% S = [
% 0, 0.333, 0.334, 0.322;
% 0.500, 0, 0.500, 0.000;
% 0.000, 0.459, 0, 0.541;
% 0.000, 0.510, 0.490, 0;
% ]
%
% Case 4C:
% S = [
% 0, 0.345, 0.333, 0.322;
% 0.317, 0, 0.392, 0.291;
% 0.317, 0.403, 0, 0.280;
% 0.210, 0.395, 0.395, 0;
% ]
%
% Example with outcome [0.1, 0.2, 0.3, 0.4]'
% S = [
% 0, 20/90, 30/90, 40/90;
% 10/80, 0, 30/80, 40/80;
% 10/70, 20/70, 0, 40/70;
% 10/60, 20/60, 30/60, 0
% ]
% covee4(S)
%
% Barebone implementation without any improvements.

% S = [
% 0, 12.0/100, 88.0/100, 0;
% 57.3/100, 0, 42.7/100, 0;
% 40.8/100, 59.2/100, 0, 0;
% 0,0,0,0;
% ]

% S = [
% 0, 45.2/100, 54.8/100, 0;
% 28.3/100, 0, 71.7/100, 0;
% 78.2/100, 21.8/100, 0, 0;
% 0,0,0,0;
% ]


n = size(S,1);

S1 = nan(n,n,n);
for j = 1:n
    for k = 1:n
        for i = 1:n
            % relativeContributionRatio
            S1(j,k,i) = S(i,j) / max(1e-16, S(i,k)); % sloppily prevent div-by-0
        end
    end
end

S2 = nan(n,n);
for j = 1:n
    for k = 1:n
        % averageRelativeContributionRatio
        y = 0;
        for i = 1:n
            if (i ~= j && i ~= k)
                y = y + S1(j,k,i);
            end
        end
        S2(j,k) = 1/(n-2) * y;
    end
end

S3 = nan(n,n,n);
for j = 1:n
    for k = 1:n
        for i = 1:n
            % averageRelativeContributionRatiosWithoutTheInputOfAgentI
            y = 0;
            for ell = 1:n
                if (ell ~= i && ell ~= j && ell ~= k)
                    y = y + S1(j,k,ell);
                end
            end
            S3(j,k,i) = 1/(n-3) * y;
        end
    end
end

S4 = nan(n,n);
for i = 1:n
    for j = 1:n
        % auxiliaryFunction
        y = 1 + S2(j,i);
        for k = 1:n
            if (k ~= i && k ~= j)
                y = y + S3(k,i,j);
            end
        end
        S4(i,j) = 1/y;
    end
end

S5 = nan(n,1);
for i = 1:n
    % relativeContribution
    y = 1;
    z = 0;
    for j = 1:n
        if (j ~= i)
            y = y - S4(j,i);
            z = z + S4(i,j);
        end
    end
    S5(i) = 1/n * (y + z);
end

S, S1, S2, S3, S4, S5
assert(not(any(isnan(S5(:)))));
assert(all(abs(sum(S5)-1) < 1e-4));

end
