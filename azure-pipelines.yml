# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
#  name: 'Azure Pipelines'
  vmImage: 'ubuntu-18.04'

steps:
- task: NodeTool@0
  displayName: 'Install Node.js'
  inputs:
    versionSpec: '12.x'

- script: 'npm ci'
  displayName: 'npm ci'

- script: 'npm run-script type'
  displayName: 'type check'

- script: 'npm run-script test:ci'
  displayName: 'unit tests'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: 'junit.xml'
    searchFolder: '$(System.DefaultWorkingDirectory)/coverage'
  displayName: 'publish unit test results'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml
  displayName: 'publish unit test coverage'

- task: DockerCompose@0
  inputs:
    dockerComposeFile: 'docker-compose.yml'
    dockerComposeCommand: 'up --detach'
  displayName: 'start external dependencies of e2e tests'

- script: 'sleep 5'
  displayName: 'sleep 5'

- script: 'psql postgres://covee-saas:password@localhost:5432/covee-saas --command="CREATE EXTENSION pg_trgm;"'
  displayName: 'postgres: create pg_trgm extension on e2e test postgres'

- task: DockerCompose@0
  inputs:
    dockerComposeFile: 'docker-compose.yml'
    dockerComposeCommand: 'logs'
  condition: failed()
  displayName: 'logs of external dependencies of e2e tests'

- script: 'npm run-script test:e2e:ci'
  displayName: 'e2e tests'

- task: DockerCompose@0
  inputs:
    dockerComposeFile: 'docker-compose.yml'
    dockerComposeCommand: 'down'
  condition: always()
  displayName: 'remove external dependencies of e2e tests'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: 'junit.xml'
    searchFolder: '$(System.DefaultWorkingDirectory)/coverage-e2e'
  displayName: 'publish e2e test results'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage-e2e/cobertura-coverage.xml
  displayName: 'publish e2e test coverage'

- script: 'npm run-script build'
  displayName: 'build'

- script: 'npm prune --production'
  displayName: 'prune'

- task: ArchiveFiles@2
  displayName: 'archive files'
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
- task: CopyFiles@2
  displayName: 'Copy archive to: $(TargetFolder)'
  inputs:
    SourceFolder: '$(Build.ArtifactStagingDirectory)'
    Contents: '$(Build.BuildId).zip'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/ArtifactsToBePublished'
- task: PublishBuildArtifacts@1
  displayName: 'publish build artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/ArtifactsToBePublished'